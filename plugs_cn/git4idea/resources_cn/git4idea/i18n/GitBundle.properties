action.text.show.all.submitted=\u663E\u793A\u6240\u6709\u672C\u6B21\u63D0\u4EA4\u66F4\u6539\u7684\u6587\u4EF6
add.action.name=\u6DFB\u52A0
add.adding=\u6DFB\u52A0\u6587\u4EF6...
addrefspec.button=\u6DFB\u52A0
addrefspec.get.references.tooltip=\u83B7\u53D6\u8FDC\u7A0B\u4ED3\u5E93\u4E2D\u7684\u6807\u8BB0\u548C\u5206\u652F\u7D22\u5F15\uFF08\u53D6\u51B3\u4E8E\u590D\u9009\u6846\u7684\u72B6\u6001\uFF09\u3002
addrefspec.get.references=\u83B7\u53D6\u7D22\u5F15
addrefspec.getting.references.title=\u83B7\u53D6{0}\u5728\u8FDC\u7A0B\u4ED3\u5E93\u4E2D\u7684\u7D22\u5F15
addrefspec.include.branches.tooltip=\u4E0B\u4E00\u6B21\u66F4\u65B0\u7D22\u5F15\u5C06\u68C0\u7D22\u8FDC\u7A0B\u4ED3\u5E93\u4E2D\u7684\u5206\u652F\u3002
addrefspec.include.branches=\u5305\u542B\u5206\u652F
addrefspec.include.tags.tooltip=\u4E0B\u4E00\u6B21\u66F4\u65B0\u7D22\u5F15\u5C06\u68C0\u7D22\u8FDC\u7A0B\u4ED3\u5E93\u4E2D\u7684\u6807\u7B7E\u3002
addrefspec.include.tags=\u5305\u542B\u6807\u7B7E
addrefspec.node.branches=\u5206\u652F
addrefspec.node.tags=\u6807\u7B7E
addrefspec.reference.chooser.tooltip=\u9009\u62E9\u8FDC\u7A0B\u4ED3\u5E93\u4E2D\u7684\u5206\u652F\u548C\u6807\u7B7E\u7D22\u5F15
addrefspec.title=\u6DFB\u52A0\u7D22\u5F15(s)
annotate.action.name=\u6CE8\u91CA
annotation.tool.tip=\u63D0\u4EA4 {0}\n\u4F5C\u8005: {1}\n\u65E5\u671F: {2}\n\n{3}
changes.retrieving=\u6B63\u5728\u68C0\u7D22\u4FEE\u8BA2\u7248\u672C{0}\u7684\u66F4\u6539
checking.out=\u68C0\u51FA {0}
checkout.action.name=\u68C0\u51FA
checkout.branch.label=\u68C0\u51FA
checkout.branch.name.exists=\u53D1\u73B0\u5B58\u5728\u540C\u540D\u7684\u5206\u652F\u3002 \u4F7F\u7528\u8986\u76D6\u9009\u9879\u5F3A\u5236\u521B\u5EFA\u5206\u652F\u3002
checkout.branch=\u68C0\u51FA
checkout.create.ref.log.tooltip=\u5982\u679C\u9009\u4E2D\uFF0C\u5219\u4E3A\u5206\u652F\u521B\u5EFA\u7D22\u5F15\u65E5\u5FD7\u3002 \u5B83\u5141\u8BB8\u57FA\u4E8E\u65F6\u95F4\u7684\u641C\u7D22\u3002(\u9009\u9879 \"-l\")
checkout.create.ref.log=\u521B\u5EFA\u7D22\u5F15\u65E5\u5FD7
checkout.include.tags.tooltip=\u5982\u679C\u9009\u4E2D\uFF0C\u7EC4\u5408\u6846\u5C06\u663E\u793A\u5305\u542B\u7684\u6807\u7B7E\u540D\u79F0\u4EE5\u53CA\u5206\u652F\u3002
checkout.include.tags=\u5305\u542B\u6807\u7B7E
checkout.invalid.new.branch.name=\u65B0\u5206\u652F\u7684\u540D\u5B57\u662F\u65E0\u6548\u7684
checkout.new.branch.tooltip=\u5728\u8FD9\u91CC\u8F93\u5165\u65B0\u5206\u652F\u7684\u540D\u5B57\u3002 \u5982\u679C\u60A8\u4E0D\u60F3\u521B\u5EFA\u65B0\u7684\u5206\u652F\uFF0C\u8BF7\u7559\u7A7A\u3002
checkout.new.branch=\u4F5C\u4E3A\u65B0\u5206\u652F
checkout.override.branch=\u8986\u76D6
checkout.override.tooltip=\u5982\u679C\u9009\u4E2D\uFF0C\u5373\u4F7F\u5DF2\u7ECF\u5B58\u5728\u540C\u540D\u5206\u652F\uFF0C\u4E5F\u4ECD\u7136\u4F1A\u521B\u5EFA\u5206\u652F\u3002 \u65E7\u5206\u652F\u5C06\u4F1A\u88AB\u5220\u9664\u3002
checkout.ref.tooltip=\u9009\u62E9\u5206\u652F\uFF0C\u6807\u8BB0\u6216\u8F93\u5165\u63D0\u4EA4\u7D22\u5F15
checkout.retrieving.branches.and.tags=\u68C0\u7D22\u5206\u652F\u548C\u6807\u7B7E
checkout.track.branch=\u8DDF\u8E2A\u6807\u7B7E
checkout.track.tooltip=\u5982\u679C\u9009\u4E2D\uFF0C\u65B0\u521B\u5EFA\u7684\u5206\u652F\u5C06\u5728\u62D6\u52A8\u65F6\u8DDF\u8E2A\u539F\u59CB\u5206\u652F\u3002
checkout.validate.tooltip=\u5982\u679C\u4F7F\u7528\u624B\u52A8\u8F93\u5165\uFF0C\u4F7F\u7528\u6B64\u6309\u94AE\u53EF\u9A8C\u8BC1\u7D22\u5F15\u7684\u8868\u8FBE\u5F0F\u3002
checkout.validate=\u9A8C\u8BC1
checkout.validation.failed=\u6E90\u7248\u672C\u9A8C\u8BC1\u5931\u8D25
command.cancelled=\u8BE5\u547D\u4EE4\u88AB\u53D6\u6D88\u3002
commit.action.name=\u63D0\u4EA4
commit.author.tooltip=<html>\u5982\u679C\u4E0E\u4E0A\u4E00\u4E2A\u63D0\u4EA4\u4F5C\u8005\u4E0D\u540C\uFF0C\u8BF7\u5728\u6B64\u5904\u6307\u5B9A\u63D0\u4EA4\u7684\u4F5C\u8005\u3002 \u4F5C\u8005\u5E94\u91C7\u7528\u4EE5\u4E0B\u683C\u5F0F\uFF1A\u4F5C\u8005\u59D3\u540D &lt;author@ema.il&gt;</html>
commit.author=\u4F5C\u8005:
commit.amend.tooltip=<html>\u5C06\u672C\u6B21\u63D0\u4EA4\u7684\u5185\u5BB9\u4E0E\u4E0A\u4E00\u4E2A\u63D0\u4EA4\u5408\u5E76</html>
commit.amend=\u4FEE\u6539\u63D0\u4EA4
commit.partial.merge.message={0}\u4E2D\u7684\u4E00\u90E8\u5206\u4E0D\u5141\u8BB8\u63D0\u4EA4\u3002\n\
  \u4EE5\u4E0B\u6587\u4EF6\u4E0D\u5305\u542B\u5728\u63D0\u4EA4\u4E2D\u3002\n\
  \u6267\u884C\u5305\u542B\u6240\u6709\u6587\u4EF6\u7684\u63D0\u4EA4\uFF1F
commit.partial.merge.title=\u5408\u5E76\u5C40\u90E8\u63D0\u4EA4
commit.push.changes.tooltip=\u542F\u7528\u6B64\u9009\u9879\u540E\uFF0C\u66F4\u6539\u5C06\u5728\u63D0\u4EA4\u540E\u63A8\u9001\u5230\u670D\u52A1\u5668\u3002
commit.push.changes=\u63A8\u9001\u66F4\u6539
common.current.branch.tooltip=\u5F53\u524D\u68C0\u67E5\u7684\u5206\u652F\u3002
common.current.branch=\u5F53\u524D\u5206\u652F\uFF1A
common.do.not.show.tooltip=\u5982\u679C\u9009\u62E9\u6B64\u9009\u9879\uFF0C\u5C06\u4F1A\u8BB0\u4F4F\u9009\u4E2D\u7684\u9009\u9879\uFF0C\u5C06\u4E0D\u4F1A\u518D\u663E\u793A\u5BF9\u8BDD\u6846\u3002
common.do.not.show=\u4E0D\u8981\u518D\u663E\u793A\u6B64\u5BF9\u8BDD\u6846
common.git.root.tooltip=\u9009\u62E9Git VCS\u6839\u76EE\u5F55
common.git.root=Git\u6839\u76EE\u5F55:
common.no.active.branch=<\u6CA1\u6709\u6D3B\u52A8\u7684\u5206\u652F>
common.refreshing=\u5237\u65B0\u6587\u4EF6
computing.annotation=\u8BA1\u7B97{0}\u7684\u6CE8\u91CA
crlf.convert.convert=\u8F6C\u6362\u9009\u4E2D\u7684\u6587\u4EF6
crlf.convert.label=<html>\u4EE5\u4E0B\u6587\u672C\u6587\u4EF6\u7684\u884C\u5206\u9694\u7B26\u4E0E\u9879\u76EE\u884C\u5206\u9694\u7B26\u4E0D\u5339\u914D\u3002<br/>\u5728\u63D0\u4EA4\u4E4B\u524D\u9009\u62E9\u8981\u8F6C\u6362\u4E3A\u4F7F\u7528\u9879\u76EE\u9ED8\u8BA4\u884C\u5206\u9694\u7B26\u7684\u6587\u4EF6\u3002</html>
crlf.convert.leave=\u4FDD\u6301\u4E0D\u53D8
crlf.convert.none.tooltip=\u5982\u679C\u9009\u62E9\u6B64\u9009\u9879\uFF0C\u5219\u5728\u63D0\u4EA4\u4E4B\u524D\u4E0D\u4F1A\u5C1D\u8BD5\u8F6C\u6362\u6587\u4EF6\u3002
crlf.convert.none=\u4E0D\u8981\u8F6C\u6362\u6587\u4EF6
crlf.convert.title=\u65E0\u6548\u7684\u5206\u9694\u7B26
current.branch.action.name=\u5F53\u524D\u5206\u652F
current.branch.change.tracked=\u66F4\u6539\u8981\u8DDF\u8E2A\u7684\u5206\u652F
current.branch.message=\u5DF2\u68C0\u51FA\u5206\u652F\uFF1A{0}
current.branch.title=\u914D\u7F6E\u8981\u88AB\u8DDF\u8E2A\u7684\u5206\u652F
current.branch.tracked.branch.none=<\u65E0>
current.branch.tracked.branch.tooltip=\u9009\u62E9\u8981\u8DDF\u8E2A\u7684\u5206\u652F
current.branch.tracked.branch=\u5206\u652F\uFF1A
current.branch.tracked.remote.none=<\u65E0>
current.branch.tracked.remote.this=<\u8FD9\u4E2A\u4ED3\u5E93>
current.branch.tracked.repository.tooltip=\u9009\u62E9\u8981\u8DDF\u8E2A\u7684\u4ED3\u5E93
current.branch.tracked.repository=\u4ED3\u5E93\uFF1A
current.branch.tracked.title=\u8DDF\u8E2A\u5206\u652F
debug.git.exec=DEBUG: work-dir: [{0}] exec: [{1}]
delete.action.name=\u5220\u9664
diff.find.error=\u67E5\u627E\u4E0D\u540C\u7248\u672C\u7684\u4FEE\u8BA2\u5185\u5BB9\uFF1A{0}
error.dialog.title=\u9519\u8BEF
error.list.title={0} \u9519\u8BEF:
error.occurred.during=\u5728\u5904\u7406''{0}''\u671F\u95F4\u53D1\u751F\u9519\u8BEF
errors.message.item=\n   {0}
errors.message=Git\u64CD\u4F5C\u5B8C\u6210\uFF0C\u6267\u884C\u671F\u95F4\u53D1\u751F\u4E86\u591A\u4E2A\u9519\u8BEF\uFF1A{0}
fetch.action.name=Fetch
fetch.button=Fetch
fetch.force.references.update.tooltip=Forces update of branch references for which update is not forced in reference mapping.
fetch.force.references.update=Force references &update
fetch.remote.label=\u8FDC\u7A0B:
fetch.remote.tooltip=Remote name or url for fetch
fetch.tags.label=Fetch &tags:
fetch.tags.policy.all=\u5168\u90E8
fetch.tags.policy.for.fetched.commits=For fetched commits
fetch.tags.policy.none=\u65E0
fetch.tags.tooltip=<html>Select fetched commits policy<ul><li><i>For fetched commits</i> means tags associated with commits on fetched branches are fetched.</li><li><i>All</i> means that all tags and reference commits are fetched</li><li><i>None</i> means that no tags are fetched.</li></ul></html>
fetch.title=Git Fetch
fetching.tags.title=Updating tags from {0}
fetching.title=Fetching from {0}
find.git.description=\u9009\u62E9Git\u53EF\u6267\u884C\u6587\u4EF6\u7684\u8DEF\u5F84
find.git.error.title=\u8FD0\u884CGit\u65F6\u51FA\u9519
find.git.success.title=Git\u6267\u884C\u6210\u529F
find.git.title=Git\u914D\u7F6E
find.git.unsupported.message=<html><tt>{0}</tt><br>This version is unsupported, and some plugin functionality could fail to work.<br>The minimal supported version is <em>{1}</em>.</html>
fix.roots.button=\u63A5\u53D7
fix.roots.list.tooltip=The suggested list of Git VCS roots, new roots are marked as bold, removed roots are marked as overstriked.
fix.roots.message=\u4EE5\u4E0B\u7684Git VCS\u6839\u76EE\u5F55\u5C06\u88AB\u7528\u6765\u4EE3\u66FF\u5F53\u524D\u7684Git VCS\u6839\u76EE\u5F55\u3002
fix.roots.title=\u4FEE\u590DGit VCS\u6839\u76EE\u5F55
fix.roots.valid.message=\u65E0\u6548\u7684Git\u6839\u76EE\u5F55\u5DF2\u7ECF\u88AB\u4FEE\u590D\u4E86\u3002
fix.roots.valid.title=\u6240\u6709\u7684Git\u6839\u76EE\u5F55\u90FD\u662F\u6709\u6548\u7684
getting.history=\u83B7\u53D6{0}\u7684\u5386\u53F2\u8BB0\u5F55
git.default.commit.message=\n# Brief commit description here\n\n# Full commit description here (comment lines starting with '#' will not be included)\n\n
git.error.exit=Git\u8FDB\u7A0B\u9000\u51FA\uFF0C\u4EE3\u7801\u4E3A{0}
git.running=\u8FD0\u884C: {0}

git.vcs.config.convert.crlf=&Line Separators Conversion:
git.vcs.config.convert.do.not.convert=\u4E0D\u8981\u8F6C\u6362
git.vcs.config.convert.project=Convert to project line separators
git.vcs.config.convert.ask=Ask before conversion
git.vcs.config.convert.tooltip=<html>Specify what to do if line separators in a file and in the project code style are different:\
  <ul>\
  <li><b>Do not convert</b> - do nothing, commit as is.</li>\
  <li><b>Convert to project line separators</b> - before commit convert line separators to match project code style settings.</li>\
  <li><b>Ask before conversion</b> - show dialog and ask what to do.</li>\
  </ul>\
  Note that this setting has nothing common with Git autocrlf and other Git settings.\
  </html>
git.vcs.config.path.label=Path to &Git executable:
git.vcs.config.ssh.mode.idea=Built-in
git.vcs.config.ssh.mode.native=Native
git.vcs.config.ssh.mode.tooltip=<html>Specify the version of SSH to be used with Git.\
  <ul><li><b>Native</b> means that the native SSH will be used.</li>\
  <li><b>Built-in</b> means that the implementation provided by {0} will be used.</li></ul>\
  The native implementation might cause hangups on some platforms. \
  In native case, you also might need to configure <em>ssh-askpass</em> for your platform to receive GUI prompts for passwords.</html>
git.vcs.config.ssh.mode=ssh\u53EF\u6267\u884C\u6587\u4EF6:
git.vcs.config.test.label=\u6D4B\u8BD5
git.vcs.config.test=\u6D4B\u8BD5

index.file.error=\u66F4\u65B0\u7D22\u5F15\u4E2D\u7684\u6587\u4EF6\u5931\u8D25
init.add.root.message=Do you want to add this directory as a VCS root?
init.add.root.title=Git\u521D\u59CB\u5316
init.destination.directory.description=Select directory where the new Git repository will be created.
init.destination.directory.title=Select directory for git init
init.warning.already.under.git=<html>The selected directory <tt>{0}</tt> is already under Git.<br/>Are you sure that you want to create a new VCS root?</html>
init.warning.title=Git\u521D\u59CB\u5316
initializing.title=Initializing repository...
merge.action.name=\u5408\u5E76
merge.add.log.information.tooltip=Add log information to the commit message (\"--log\" option)
merge.add.log.information=Add &log information
merge.branch.button=\u5408\u5E76
merge.branch.message=Select branch to merge into this one ({0})
merge.branch.title=\u5408\u5E76\u5206\u652F
merge.branches.tooltip=<html>The chooser for branches. Select one or more branches to merge (already merged branches are not shown)</html>.
merge.branches=\u5408\u5E76\u5206\u652F\uFF1A
merge.commit.message.tooltip=The commit message to use in case if merge results in commit (\"-m\" option)
merge.commit.message=Commit &Message
merge.default.strategy=<\u9ED8\u8BA4>
merge.is.not.needed=Merge is not needed for the file {0}
merge.load.files=Loading files for merge
merge.no.commit.tooltip=Force no commit for merge (the \"--no-commit\" option)
merge.no.commit=\u6CA1\u6709\u63D0\u4EA4
merge.no.fast.forward.tooltip=Disable fast forward (\"--no-ff\" option)
merge.no.fast.forward=No &fast forward
merge.retrieving.branches=Retrieving unmerged branches
merge.squash.commit=S&quash commit
merge.squash.tooltip=Squash all changes into the single commit (\"--squash\" option)
merge.strategy.tooltip=The merge strategy to use (\"-s\" option)
merge.strategy=&Strategy:
merge.tool.action.name=\u5408\u5E76\u5DE5\u5177
merge.tool.column.status.deleted=\u5220\u9664
merge.tool.column.status.modified=\u5DF2\u7ECF\u4FEE\u6539
merge.tool.column.theirs.status=\u5176\u5B83\u7684
merge.tool.column.yours.status=\u4F60\u7684
merging.branch=\u5408\u5E76\u5206\u652F{0}
merging.title=\u5C06\u66F4\u6539\u5408\u5E76\u5230{0}
paths.affected.title=Paths affected in commit {0}
pull.action.name=\u62C9\u53D6
pull.button=\u62C9\u53D6
pull.force.reference.update=Force reference &update
pull.get.branches.tooltip=Get branch names from remote repository. Otherwise a locally cached information is used.
pull.get.branches=&Get Branches
pull.getting.remote.branches=Getting Remote Branches...
pull.remote.tooltip=Registered remote name or URL.
pull.remote=\u8FDC\u7A0B:
pull.retrieving.remotes=Retrieving remotes
pull.title=\u63A8\u9001\u66F4\u6539
pull.url.message=Enter remote repository URL to pull/merge (empty for default):
pull.url.title=Pull URL
pulling.title=Pulling changes from {0}
push.action.name=\u63A8\u9001
push.active.action.name=\u63A8\u9001\u6D3B\u52A8\u5206\u652F
push.active.autostash.tooltip=Auto-stash changes before rebase
push.active.autostash=&Auto-stash
push.active.rebase.and.push=Rebase and Push
push.active.commit.node.merge=(merge commit)
push.active.commits=\u63D0\u4EA4:
push.active.error.behind=Some local branches are behind remote branches
push.active.error.merges.unchecked=Roots with merge commits cannot be selectively pushed
push.active.error.no.branch=Some roots are not on the branch
push.active.error.reorder.merges=It is not possible to reorder commits if merges present
push.active.error.reorder.needed=The nodes should be reordered using rebase operation.
push.active.fetch.failed.title=Fetch Failed
push.active.fetch.failed=The fetch operation failed for some branches
push.active.fetch.tooltip=Fetch state of tracked branches from remote repository
push.active.fetch=\u6D4B\u8BD5\u6309\u94AE
push.active.fetching=Fetching changes for active branches
push.active.pushing=\u63A8\u9001\u5206\u652F\u4E2D...
push.active.rebase.tooltip=Rebase branches in order to make push possible (might reorder commits)
push.active.rebase=&Rebase
push.active.rebasing=Rebasing ...
push.active.save.before.rebase=Clean working tree before rebase:
push.active.status.behind=Unable to push. The current branch is behind tracked branch by {0,choice, 1#1 commit|2#{0,number} commits}.
push.active.status.no.branch=The head is not on the branch.
push.active.status.no.commits.behind=Nothing to push. The current branch is behind tracked branch by {0,choice, 1#1 commit|2#{0,number} commits}.
push.active.status.no.commits=Nothing to push.
push.active.status.no.tracked=\u6CA1\u6709\u914D\u7F6E\u8981\u8DDF\u8E2A\u7684\u5206\u652F\u3002
push.active.status.push={0,choice, 1#1 \u9879\u63D0\u4EA4 |2#{0,number} \u9879\u63D0\u4EA4} \u5C06\u88AB\u63A8\u9001\u3002
push.active.status.status=\u72B6\u6001\uFF1A
push.active.title=\u63A8\u9001\u6D3B\u52A8\u5206\u652F
push.active.view=\u6D4F\u89C8
push.branches.tooltip=\u9009\u62E9\u8981\u63A8\u9001\u7684\u5206\u652F
push.branches=\u5206\u652F\uFF1A
push.button=\u63A8\u9001
push.force.update.tooltip=If selected remote ref is updated even if they are is not an ancestor of the local ref.
push.force.update=\u5F3A\u5236\u66F4\u65B0
push.policy.all=\u5168\u90E8
push.policy.default=\u9ED8\u8BA4
push.policy.mirror=\u955C\u50CF
push.policy.selected=\u9009\u4E2D\u7684\u5206\u652F
push.policy.tooltip=<html>Select push policy:<ul><li><em>Default</em> - the push is done according to the configuration of the remote.</li><li><em>Selected branches</em> - selected branches are pushed.</li><li><em>All</em> - all references under refs/heads are pushed.</li><li><em>Mirror</em> - all references under refs/ are pushed including tags and remotes.</li></ul></html>
push.policy=\u63A8\u9001:
push.remote.tooltip=Specify remote repository URL or remote name where to push changes.
push.remote=\u8FDC\u7A0B:
push.show.tags.tooltip=If selected, the tags are shown in branch chooser as well.
push.show.tags=\u663E\u793A\u6807\u7B7E
push.tags.tooltip=All tag references are pushed in addition to references specified in references section.
push.tags=\u63A8\u9001\u7B7E
push.title=\u63A8\u9001\u66F4\u6539
push.use.thin.pack.tooltip=If this option is selected, the push will spend extra CPU cycles to minimize amount of data transferred (use it for slow connections)
push.use.thin.pack=&Use thin pack
pushing.all.changes=Pushing all committed changes, refs & tags to remote repositories
gc.action.name=Run Garbage Collector
rebase.abort.action.name=Abort Rebasing
rebase.action.error=Git Rebase Error
rebase.action.message=Multiple Git roots have unfinished rebase process, please select root to perform action on.
rebase.action.name=Rebase
rebase.action.no.root=There is no rebase operation in progress in the project
rebase.branch.tooltip=Select branch to rebase (if branch is different from the current branch, it will be checked out first)
rebase.branch=\u5206\u652F:
rebase.button=Rebase
rebase.continue.action.name=Continue Rebasing
rebase.editor.action.column=\u52A8\u4F5C
rebase.editor.button=Start Rebasing
rebase.editor.comment.column=\u8BC4\u8BBA
rebase.editor.commit.column=\u63D0\u4EA4
rebase.editor.invalid.entryset=No commits found to rebase
rebase.editor.invalid.squash=The first non-skip commit can''t be marked as {0} since it merges commit with the previous commit.
rebase.editor.message=Reorder and edit &rebased commits
rebase.editor.move.down.tooltip=\u5728\u63D0\u4EA4\u5217\u8868\u4E2D\u4E0B\u79FB\uFF08\u5C06\u5EF6\u540E\u8FDB\u884C\u63D0\u4EA4\uFF09
rebase.editor.move.down=\u4E0B\u79FB
rebase.editor.move.up.tooltip=\u5728\u63D0\u4EA4\u5217\u8868\u4E2D\u4E0A\u79FB\uFF08\u5C06\u63D0\u524D\u8FDB\u884C\u63D0\u4EA4\uFF09
rebase.editor.move.up=\u4E0A\u79FB
rebase.editor.title=Rebasing Commits
rebase.editor.view.tooltip=\u67E5\u770B\u63D0\u4EA4\u5185\u5BB9
rebase.editor.view=\u67E5\u770B
rebase.from.tooltip=Specify actual base for the branch. Leave blank to onto.
rebase.from=\u6765\u81EA:
rebase.in.progress=Interactive rebase has been already started for this Git root.
rebase.interactive.tooltip=If selected, the interactive rebase will be preformed.
rebase.interactive=&Interactive
rebase.invalid.from=\"From\" reference expression is invalid.
rebase.invalid.onto=\"Onto\" reference expression is invalid.
rebase.merge.strategy.tooltip=Select merge strategy to use
rebase.merge.strategy=Merge &Strategy:
rebase.no.merge.tooltip=If selected, no merge strategies will be applied during the rebase.
rebase.no.merge=&Do not use merge strategies
rebase.onto.tooltip=The reference that will become a new base for selected branch.
rebase.onto.validate=\u9A8C\u8BC1
rebase.onto=\u5728:
rebase.preserve.merges.tooltip=Preserve merges during rebase instead of squashing them.
rebase.preserve.merges=&Preserve Merges
rebase.result.success.title=Rebased successfully
rebase.result.success=Successfully rebased {1,choice, 1#1 commit|2#{1,number} commits}
rebase.result.amend.title=Rebase Suspended
rebase.result.amend=Stopped for amending commit while rebasing ({0}/{1}).\nAmend commit and continue the rebase process.
rebase.result.cancelled.title=Rebase Cancelled
rebase.result.cancelled=The rebase process was cancelled.
rebase.result.conflict.title=Rebase Suspended
rebase.result.conflict=Stopped rebasing because of conflict ({0}/{1}).\nResolve conflicts and continue the rebase process.
rebase.result.error.title=Rebase Error
rebase.show.remote.branches.tooltip=If selected, remote branches are shown in drop down as well.
rebase.show.remote.branches=Show Re&mote Branches
rebase.show.tags.tooltip=Show tags in \"from\" and \"onto\" comboboxes.
rebase.skip.action.name=Skip Commit in Rebasing
rebase.title=Rebase branch
rebase.unstructured.editor.button=Resume Rebasing
rebase.unstructured.editor.git.root=Git Root:
rebase.unstructured.editor.message=Git rebase operation requested additional &information through the editor:
rebase.unstructured.editor.title=Additional Rebase Input
rebase.unstructured.editor.tooltip=Edit this text according to instructions provided inline
rebase.valdate.onto.tooltip=Validate "onto" reference.
rebase.validate.from.tooltip=Validate \"from\" reference
rebase.validate.from=\u9A8C\u8BC1
rebasing.title=Rebasing...
refspec.add.all.branches.tooltip=\u6DFB\u52A0\u7D22\u5F15\u89C4\u5219\uFF0C\u901A\u8FC7\u5168\u5C40\u89C4\u5219\u6620\u5C04\u6240\u6709\u8FDC\u7A0B\u4ED3\u5E93\u4E0A\u7684\u5206\u652F\u3002
refspec.add.all.branches=\u6DFB\u52A0\u6240\u6709\u5206\u652F
refspec.add.all.tags.tooltip=\u6DFB\u52A0\u6240\u6709\u6807\u7B7E\u7684\u6620\u5C04\u4FE1\u606F
refspec.add.all.tags=\u6DFB\u52A0\u6240\u6709\u6807\u7B7E
refspec.add.ref.tooltip=\u6309\u540D\u79F0\u6DFB\u52A0\u5206\u652F\u6216\u6807\u7B7E
refspec.add.ref=\u6DFB\u52A0...
refspec.branch.prefix.tooltip=\u6307\u5B9A\u7528\u4E8E\u6620\u5C04\u7684\u9ED8\u8BA4\u5206\u652F\u524D\u7F00\u3002
refspec.branch.prefix=\u8FDC\u7A0B\u4ED3\u5E93\u540D:
refspec.column.force=\u5F3A\u5236
refspec.column.local=\u672C\u5730
refspec.column.remote=\u8FDC\u7A0B
refspec.default.tooltip=\u6062\u590D\u9ED8\u8BA4\u7D22\u5F15\u6620\u5C04
refspec.default=\u9ED8\u8BA4
refspec.remove.tooltip=\u79FB\u9664\u7D22\u5F15\u89C4\u5219
refspec.remove=\u79FB\u9664
refspec.title=\u7D22\u5F15\u6620\u5C04
refspec.validation.remote.invalid=The invalid local name for remote
refspec.validation.remote.is.blank=The local name for remote is blank
regase.show.tags=\u663E\u793A\u6807\u7B7E
remove.removing=\u6B63\u5728\u5220\u9664\u6587\u4EF6...
repository.action.missing.roots.misconfigured=None of configured Git roots are under Git. The configured directory or some of its ancestors must have ".git" directory in it.
repository.action.missing.roots.title=No Git roots
repository.action.missing.roots.unconfigured.message=No Git roots are configured for the project.
reset.action.name=Reset Head ...
reset.button=\u91CD\u7F6E
reset.commit.invalid=\u6307\u5B9A\u7684\u63D0\u4EA4\u8BED\u53E5\u6CA1\u6709\u901A\u8FC7\u9A8C\u8BC1\u3002
reset.commit.label=\u51C6\u5907\u63D0\u4EA4:
reset.commit.tooltip=The commit that will become the current HEAD\n as result of reset operation.
reset.title=Reset Head
reset.type.hard=Hard
reset.type.mixed=Mixed
reset.type.soft=Soft
reset.type.tooltip=<html>The reset type (see also <code>git reset</code> man page):<ul><li><b>Mixed</b> resets index but not working tree</li><li><b>Soft</b> leaves index and working tree, just moves head pointer</li><li><b>Hard</b> resets index and working tree.<em>Changes in the working tree will be lost</em></li></ul></html>
reset.type=Reset &Type:
reset.validate.tooltip=Validate the commit pointer and check the content of referenced commit.
reset.validate=\u9A8C\u8BC1
resetting.title=Resetting HEAD...
revert.action.name=\u8FD8\u539F
revert.reverting.mulitple=\u8FD8\u539F {0} \u6587\u4EF6\u4E2D...
revert.reverting=\u8FD8\u539F\u6587\u4EF6\u4E2D...
revision.graph=\u4FEE\u8BA2\u56FE\u8868
root.tracker.message.title=\u65E0\u6548\u7684Git\u6839\u76EE\u5F55
root.tracker.message=<p>Some configured Git VCS roots are not under Git or have Git repositories in subdirectories without a configured VCS root. <a href="">Configure.</a></p>
select.branch.to.checkout=\u9009\u62E9\u8981\u68C0\u51FA\u7684\u5206\u652F
show.all.paths.affected.action.name=\u663E\u793A\u6240\u6709\u53D7\u5F71\u54CD\u7684\u8DEF\u5F84
ssh.ask.passphrase.title=SSH\u5BC6\u94A5
ssh.changed.host.key=<html>The server host key for the host {0}:{1} has changed to {2} (type {3}).\nDo you want to accept the changed key?</html>
ssh.confirm.key.titile=\u786E\u8BA4SSH\u670D\u52A1\u5668\u5BC6\u94A5
ssh.error.title=\u6388\u6743\u9519\u8BEF
ssh.keyboard.interactive.title=SSH Keyboard Interactive: {0}
ssh.keyboard.interactive.username=\u7528\u6237\u540D:
ssh.new.host.key=<html>Connecting to a new host {0}:{1,number,#} that has the key {2} (type {3}).\nDo you want to add this host to known hosts database?</html>
ssh.password.message=\u7528\u6237{0}\u7684\u5BC6\u7801\uFF1A
ssh.password.title=SSH\u5BC6\u7801\u767B\u5F55
stash.action.name=Stash
stash.button=Create Stash
stash.keep.index.tooltip=If this checkbox is selected, indexed changes are kept in the index.
stash.keep.index=Keep &index
stash.message.tooltip=Enter stash message here.
stash.message=\u6D88\u606F\uFF1A
stash.title=Stash
stashing.title=Stashing changes...
tag.action.name=\u6807\u7B7E
tag.button=\u521B\u5EFA\u6807\u7B7E
tag.commit.label=\u63D0\u4EA4\uFF1A
tag.commit.tooltip=Enter name of commit or object to tag or leave blank to use HEAD.
tag.error.creating.message.file.message=Unable to create message file: {0}
tag.error.creating.message.file.title=Error creating message file
tag.error.invalid.commit=The commit or object name is invalid.
tag.error.tag.exists=\u5B58\u5728\u540C\u540D\u7684\u6807\u7B7E\u3002
tag.force.tooltip=Force creation of the text even if tag with such name already exists.
tag.force=\u5F3A\u5236
tag.getting.existing.tags=Getting existing tags...
tag.message.label=\u6D88\u606F\uFF1A
tag.message.tooltip=If the message is not empty, an annotated tag is created.
tag.message=Specify tag name:
tag.name.label=\u6807\u7B7E\u540D\uFF1A
tag.name.tooltip=Enter the new tag name here.
tag.nonvcs.error.message=ERROR: Files not tagged, not all are under VCS root!
tag.nonvcs.error.title=Tag Result
tag.title=\u6807\u7B7E
tag.validate.tooltip=Click this button to the validate commit to be tagged.
tag.validate=\u9A8C\u8BC1
task.queue.title=Git Operations
unindexed.files.changlelist.name=Unindexed Files
unstash.action.name=UnStash
unstash.branch.label\:=As new &branch:
unstash.branch.tooltip=If non-empty name is entered, the stash is checked out as a new branch.
unstash.button.apply=Apply Stash
unstash.button.branch=\u5206\u652F
unstash.button.pop=\u6D41\u52A8\u5B58\u50A8
unstash.clear.tooltip=\u5220\u9664\u8D44\u6E90\u5E93\u4E2D\u6240\u6709\u7684\u5B58\u50A8\u3002
unstash.clear=\u6E05\u7406
unstash.clearing.stashes=\u6E05\u7406\u5B58\u50A8...
unstash.drop.tooltip=\u5220\u9664\u9009\u5B9A\u7684\u5B58\u50A8
unstash.drop=\u5220\u9664
unstash.dropping.stash=Dropping stash {0}...
unstash.error.branch.exists=The specified branch already exists
unstash.error.invalid.branch.name=Invalid branch name
unstash.pop.stash.tooltip=If selected the stash is dropped after it is applied.
unstash.pop.stash=&Pop stash
unstash.reinstate.index.tooltip=Attempt to reinstate index as well as working tree changes.
unstash.reinstate.index=Reinstate &index
unstash.stashes.item=<html><b><tt>{0}</tt></b>:<i>{1}</i>: {2}</html>
unstash.stashes.tooltip=Select a stash to operate for.
unstash.stashes=&Stashes:
unstash.title=UnStash Changes
unstash.unstashing=Unstashing...
unstash.view.tooltip=View selected stash
unstash.view=\u6D4F\u89C8
unstashing.title=UnStashing changes...
update.options.display.name=Git Update Settings
update.options.no.commit=No &Commit
update.options.save.before.update=Clean working tree before update
update.options.save.keep.tooltip=Leave changes on working tree
update.options.save.keep=Do &Not Clean
update.options.save.shelve.tooltip=Use {0}''s Shelve to save changes (the files will be restored after update)
update.options.save.shelve=Using She&lve
update.options.save.stash.tooltip=Use Git Stash to save changes (the files will be restored after update)
update.options.save.stash=Using S&tash
update.options.type.default.tooltip=Use branch default update strategy for all updated Git VCS roots
update.options.type.default=Branch &Default
update.options.type.merge.tooltip=Use merge update strategy for all Git VCS roots
update.options.type.merge=\u5408\u5E76
update.options.type.rebase.tooltip=Use rebase update strategy for all Git VCS roots
update.options.type.rebase=&Rebase
update.options.type=\u66F4\u65B0\u7C7B\u578B
update.rebase.no.change.cancel=\u53D6\u6D88\u66F4\u65B0
update.rebase.no.change.retry=\u91CD\u8BD5/\u7EE7\u7EED
update.rebase.no.change.skip=\u8DF3\u8FC7\u63D0\u4EA4
update.rebase.no.change.title=No Changes Staged
update.rebase.no.change=<html>No changes detected <tt>{0}</tt>. <ul><li>Skip Commit - skips current commit in the rebase process</li><li>Retry Continue - do it after you add changes to commit manually</li><li>Or cancel cancels update process for this root.</li></ul></html>
update.rebase.unmerged.title=Unresolved Rebase Conflicts
update.rebase.unmerged=<html>Root: <tt>{0}</tt><br/>There still remain files to be merged. Do you want to merge them?<ul><li>Yes - Merge.</li><li>No - Cancel update for this root.</li></ul></html>
update.restoring.change.lists=Restoring changelists...
update.root.rebasing.item=<li>{0}</li>
update.root.rebasing.message=<html>The following roots have unfinished rebase process. Update is not possible.<ul>{0}</u></html>
update.root.rebasing.title=Unfinished Rebase Process
update.root.rebasing=The root {0} has unfinished rebase process.
update.shelving.changes=Shelving changes...
update.unshelving.changes=Unshelving Changes...
util.remote.renderer.default=<html><b>{0}</b>(<i>{1}</i>)</html>
util.remote.renderer.none=<html><i>None</i></html>
util.remote.renderer.normal=<html><b>{0}</b>(<i>{1}</i>)</html>
util.remote.renderer.self=<html><i>Current repository</i></html>
vcs.unable.to.run.git=Unable to run git: {0} ({1})
vfs.listener.add.single.prompt=Do you want to add the following file to Git?\n{0}\n\nIf you choose No, you can still add it later manually.
vfs.listener.add.single.title=\u6DFB\u52A0\u6587\u4EF6\u5230Git
vfs.listener.add.title=\u6DFB\u52A0\u6587\u4EF6\u5230Git
vfs.listener.checking.ignored=Checking for ignored files
vfs.listener.delete.single.prompt=Do you want to delete the following file from Git?\n{0}\n\nIf you choose No, you can still delete it later manually.
vfs.listener.delete.single.title=Delete File from Git
vfs.listener.delete.title=Delete Files from Git

general.error = Git\u9519\u8BEF
executable.error.title = Git\u7684\u6267\u884C\u95EE\u9898
executable.error.description = Git\u65E0\u6CD5\u542F\u52A8\u3002 Git\u53EF\u6267\u884C\u6587\u4EF6\u7684\u8DEF\u5F84\u53EF\u80FD\u662F\u65E0\u6548\u7684\u3002 <a href="">\u4FEE\u590D</a>

git.commit.message.empty=\u8BF7\u6CE8\u660E\u63D0\u4EA4\u4FE1\u606F
git.commit.message.empty.title=\u63D0\u4EA4\u4FE1\u606F\u662F\u7A7A\u7684

git.executable.notification.title=\u65E0\u6CD5\u542F\u52A8Git
git.executable.notification.description=Git\u53EF\u6267\u884C\u6587\u4EF6\u7684\u8DEF\u5F84\u53EF\u80FD\u662F\u65E0\u6548\u7684\u3002
git.executable.dialog.title=Git\u53EF\u6267\u884C\u6587\u4EF6
git.executable.dialog.description=\u6307\u5B9AGit\u53EF\u6267\u884C\u6587\u4EF6\u7684\u5B8C\u6574\u8DEF\u5F84
git.executable.dialog.error=\u5B83\u4F3C\u4E4E\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u7684Git\u53EF\u6267\u884C\u6587\u4EF6
git.executable.filechooser.title=Git\u53EF\u6267\u884C\u6587\u4EF6
git.executable.filechooser.description=\u6307\u5B9AGit\u53EF\u6267\u884C\u6587\u4EF6\u7684\u5B8C\u6574\u8DEF\u5F84

git.push.active.close=\u5173\u95ED

git.unstash.clear.confirmation.message=\u5220\u9664\u6240\u6709\u7684\u5B58\u50A8\uFF1F \u8FD9\u9879\u64CD\u4F5C\u4E0D\u53EF\u64A4\u6D88\u3002
git.unstash.clear.confirmation.title=\u5220\u9664\u6240\u6709\u7684\u5B58\u50A8\uFF1F
git.unstash.drop.confirmation.message=<html>\u4F60\u60F3\u5220\u9664{0}\u5417\uFF1F<br/>"{1}"</html>
git.unstash.drop.confirmation.title=\u5220\u9664\u5B58\u50A8{0}\uFF1F

vcs.popup.git.github.section=GitHub

vcs.history.action.gitlog=\u5728Git\u65E5\u5FD7\u4E2D\u9009\u62E9
vcs.history.action.gitlog.error=Git\u65E5\u5FD7\u672A\u51C6\u5907\u5C31\u7EEA

exportable.Git.Application.Settings.presentable.name=Git